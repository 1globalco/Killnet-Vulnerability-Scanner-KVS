inputs:
  version:
    required: true
    type: string
    description: 'Three digits version like 5.6.0'

runs:
  using: "composite"
  steps:
    - name: Dump GitHub context
      shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
        
    - name: Zip security-scan 4.x
      shell: bash
      run: 7z a security-scan4x.zip "./SecurityCodeScan.Tool/.NET 4.x/bin/Release/net48/*"
        
    - name: Create draft release
      uses: softprops/action-gh-release@8a65c813553f4d05769635eb1b70180d25b9b61b
      with:
        draft: true
        name: ${{inputs.version}}
        tag_name: ${{inputs.version}}
        fail_on_unmatched_files: true
        files: |
          ./SecurityCodeScan/bin/Release/**/*.nupkg
          ./SecurityCodeScan.Vsix/bin/Release/*.vsix
          ./SecurityCodeScan.Tool/.NET Core/bin/Release/*.nupkg
          security-scan4x.zip

    - name: Publish vsix
      shell: powershell
      env:
        marketplace_token: ${{ github.event.secrets.MARKETPLACE_TOKEN }}
      run: |
        Write-Host "Pushing to visual studio market place"
        $visualStudioInstallation = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VSSDK -property installationPath
        $vsixPublisher = Join-Path $visualStudioInstallation 'VSSDK\VisualStudioIntegration\Tools\Bin\VsixPublisher.exe'
        & $vsixPublisher login -publisherName JaroslavLobacevski -personalAccessToken $env:marketplace_token
        $vsix = Get-ChildItem -File .\SecurityCodeScan.Vsix\bin -recurse | Where-Object { $_.Extension -eq ".vsix" } | Select-Object -First 1 -ExpandProperty FullName
        $ManifestPath = ".\SecurityCodeScan.Vsix\marketplace.json"
        & $vsixPublisher publish -payload $vsix -publishManifest $ManifestPath -personalAccessToken $env:marketplace_token
        # currently vsixpublisher.exe throws non critical telemetry exception but does the job done
        # force successful exit code
        [Environment]::Exit(0)
        
    - name: Publish nugets
      shell: bash
      env:
        nuget_token: ${{ github.event.secrets.NUGET_TOKEN }}
      run: |
        dotnet nuget push "./SecurityCodeScan/bin/Release/netstandard2.0/SecurityCodeScan.VS2019.${{inputs.version}}.nupkg" -k $nuget_token -s https://api.nuget.org/v3/index.json
        dotnet nuget push "./SecurityCodeScan.Tool/.NET Core/bin/Release/security-scan.${{inputs.version}}.nupkg" -k $nuget_token -s https://api.nuget.org/v3/index.json
